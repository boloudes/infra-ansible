---
# Clone the Nginx config repo onto the target host, then deploy selected vhosts.

- name: Ensure working dir exists
  become: true
  file:
    path: /opt/nginx-config
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Cloner le repo Nginx
  become: true
  git:
    repo: "{{ nginx_config_repo }}"
    version: "{{ nginx_config_ref | default('main') }}"
    dest: /opt/nginx-config
    accept_hostkey: true
    force: true
    update: true

- name: Déployer vhosts sélectionnés dans sites-available
  become: true
  copy:
    src: "/opt/nginx-config/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-available/{{ item }}"
    owner: root
    group: root
    mode: "0644"
    backup: true
    remote_src: true          # <<< IMPORTANT: les fichiers sont sur la machine distante
  loop: "{{ nginx_enabled_sites }}"

- name: Activer les vhosts (symlinks dans sites-enabled)
  become: true
  file:
    src: "/etc/nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    state: link
    force: true
  loop: "{{ nginx_enabled_sites }}"

# Optionnel: retirer des symlinks obsolètes non listés dans nginx_enabled_sites
- name: Lister les symlinks actuels
  become: true
  find:
    paths: /etc/nginx/sites-enabled
    file_type: link
  register: se_links

- name: Désactiver les vhosts non listés
  become: true
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ se_links.files }}"
  when: (item.path | basename) not in nginx_enabled_sites

- name: Test nginx config
  become: true
  command: nginx -t
  register: nginx_test
  changed_when: false

- name: Reload nginx si OK
  become: true
  systemd:
    name: nginx
    state: reloaded
  when: nginx_test.rc == 0
